c(1:nrow(selected_places()))
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
p = flights %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p)
p = flights %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p)
p = flights %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p$arr_delay)
p = flights %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay)
p = flights %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay))
nrow(flights)
fly = flights[complete.cases(flights),]
p = fly %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="ORD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay))
nrow(p)
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
fly = flights[complete.cases(flights),]
p = fly %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="IAD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay))
fly = flights[complete.cases(flights),]
p = fly %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="IAD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay))
fly = flights[complete.cases(flights),]
p = fly %>% select(origin,dest,arr_delay) %>% filter(origin == "EWR" & dest =="IAD")
hist(p$arr_delay,breaks = min(p$arr_delay):max(p$arr_delay))
p
summary(p$arr_delay)
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
flights
flights
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
flights[25,]
flights[c(1:25),]
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
install.packages("tigris")
library(tidyverse)
library(leaflet)
leaflet() %>% setView(lng = -121.7405, lat = 38.5449, zoom = 13) %>%
addTiles()
quakes %>%
filter(mag > quantile(mag, 0.95)) %>%
leaflet() %>%
addProviderTiles(providers$Wikimedia) %>%
addMarkers(~long, ~lat, label = ~mag)
library(leaflet)
library(tigris)
states <- states(cb = TRUE)  # lowest resolution us map
class(states)
starbucks <- read_csv("starbucks.csv")
(starbucks <- starbucks %>%
count(Province) %>%
rename(state = Province, total = n))
states_starbucks <- states %>%
geo_join(starbucks, "STUSPS", "state") %>%
subset(!is.na(total))
pal <- colorNumeric("Greens", domain=states_starbucks$total)
states_starbucks %>%
leaflet() %>%
setView(lng = -100, lat = 40, zoom = 4) %>%
addProviderTiles(providers$Wikimedia) %>%
addPolygons(fillColor = ~pal(total), fillOpacity = 0.7, weight = 1, smoothFactor = 0.2) %>%
addLegend(pal = pal, values = states_starbucks$total, position = "bottomright", title = "Starbucks")
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
head(airport_info)
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info %>% filter(faa == "EWR")
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info %>% filter(faa == "lGA")
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info %>% filter(faa == "LGA")
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info %>% filter(faa == "JFK")
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airports
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airports %>% select(unique(faa))
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airports %>% select(faa)
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airports %>% select(faa) %>% unique()
dest_ardly = flights %>%
select(dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airports %>% select(unique(faa))
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
dest_ardly = flights %>%
select(origin,dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info
dest_ardly = flights %>%
select(origin,dest,arr_delay) %>%
group_by(dest) %>%
summarise(mean_arrivaldelay=mean(arr_delay)) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info
head(flights)
dest_ardly = flights %>%
select(origin,dest,arr_delay) %>%
rename(
faa=dest
)
airport_info = dest_ardly %>% left_join(airports,by="faa")
airport_info
airprt = flights %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa")
airprt
airprt = flights %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
airprt
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
flights %>%
filter(origin =="JFK" & faa == "MIA")
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon)
flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nycflights13)
library(leaflet)
leaflet(flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique())
leaflet(flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique()) %>% addTiles()
leaflet(flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique()) %>% addTiles() %>% addMarkers()
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
leaflet(flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique()) %>% addTiles() %>% addMarkers()
leaflet(flights %>%
filter(origin =="JFK" & faa == "MIA") %>% select(lat,lon) %>% unique()) %>% addTiles() %>% addMarkers()
flights = flights[complete.cases(flights),] %>%
select(origin,dest,arr_delay) %>%
rename(faa=dest) %>% left_join(airports,by="faa") %>%
select(origin,faa,arr_delay,lat,lon)
View(flights)
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
library(DBI)
chinook <- dbConnect(RPostgres::Postgres(),
dbname = "chinook",
user = "psqluser", password = "secret", host = "alan.ucdavis.edu"
)
library(DBI)
chinook <- dbConnect(RPostgres::Postgres(),
dbname = "chinook",
user = "psqluser", password = "secret", host = "alan.ucdavis.edu"
)
library(shiny); runApp('~/Downloads/q1.R')
runApp('q1.R')
runApp('q1.R')
runApp('~/Downloads/q1.R')
runApp('~/Downloads/q1.R')
runApp('~/Desktop/STA141b/sta141b-assignment-4-chriztopherton/q1.R')
runApp('~/Downloads/q1.R')
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
data <- read_rds("data.rds")
library(readr)
set.seed(141)
n <- 1e7
write_rds(abs(rt(n, 1.1)), "data.rds")
data <- read_rds("data.rds")
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
data <- read_rds("data.rds")
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
c(mean(data) - qnorm(0.975) * sd(data)/sqrt(length(data)),
mean(data) + qnorm(0.975) * sd(data)/sqrt(length(data)))
library(shiny); runApp('~/Desktop/sta141b_shiny/lol.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
runApp('~/Desktop/sta141b_shiny/gmaps_api.R')
knitr::opts_chunk$set(echo = TRUE)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
sd(lst1)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
sd(lst1)
sd(lst2)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
sd(lst1)^2
sd(lst2)^2
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,1)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,9,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,9,9,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,1,1,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
lst1 = c(1,1,1,1,1,9,9,9,9,9)
lst2= c(1,1,1,1,1,1,1,1,1,9)
var(lst1)
var(lst2)
hello <- function() {
print("Hello, world!")
}
library(BLMR)
library(nycflights13)
#library(Rmpi)
library(parallel)
library(tidyverse)
library(furrr)
flights = flights[complete.cases(flights),] %>%
mutate(time = hour*60 + minute) %>%
select(dep_delay,arr_delay,distance,time)
head(flights)
y = flights$time #response variable defined
x = flights[,c(1:3)] #predictor variables subsetted
data = data.frame(y,x)
coef_ci(data) #function being applied
#' 'Finds the CI for regression coefficients'
#' @export
#----------------------------------------------------------------------------------------------------------------------------------------
coef_ci <- function(data){
set.seed(141)
m <- 10
n <- nrow(data)
group <- sample(seq_len(m), n, replace = TRUE)
map(seq_len(m), ~write_csv(data[group ==., ],str_c("part",.,".csv")))
calc_slope_blb <- function(subsample, freqs){
as.matrix(summary(lm(y ~ ., weights = freqs, data = subsample))$coef[,1])
}
library(furrr)
plan(multiprocess)
B <- 10
each_boot <-function(i, ind_part){
subsample <- read_csv(str_c("part", ind_part,".csv"))
freqs <- rmultinom(1, n, rep(1, nrow(subsample)))
calc_slope_blb(subsample, freqs)
}
for (i in 1:ncol(data)){
ci_list <- future_map(seq_len(m), ~{
map(seq_len(B), each_boot, ind_part =.) %>%
lapply(function(x) x[i,]) %>% unlist %>% quantile(c(0.025,0.975))
})
print (reduce(ci_list, `+`)/length(ci_list))
}
}
#----------------------------------------------------------------------------------------------------------------------------------------
#' 'Finds the CI for new prediction'
#' @export
pred_ci <- function(data, newdata){
set.seed(141)
m <- 10
n <- nrow(data)
group <- sample(seq_len(m), n, replace = TRUE)
map(seq_len(m), ~write_csv(data[group ==., ],str_c("part",.,".csv")))
calc_slope_blb <- function(subsample, freqs){
predict(lm(y ~ ., weights = freqs, data = subsample),newdata)
}
library(furrr)
plan(multiprocess)
B <- 10
each_boot <-function(i, ind_part){
subsample <- read_csv(str_c("part", ind_part,".csv"))
freqs <- rmultinom(1, n, rep(1, nrow(subsample)))
calc_slope_blb(subsample, freqs)
}
ci_list <- future_map(seq_len(m), ~{
map_dbl(seq_len(B), each_boot, ind_part =.) %>%
quantile(c(0.025,0.975))
})
print( reduce(ci_list, `+`)/length(ci_list))
}
#----------------------------------------------------------------------------------------------------------------------------------------
head(flights)
y = flights$time #response variable defined
x = flights[,c(1:3)] #predictor variables subsetted
data = data.frame(y,x)
coef_ci(data) #function being applied
#prediction CI on new data
newdata = data.frame(dep_delay = 3,arr_delay = -15,distance = 500)
pred_ci(data,newdata)
?BLMR
??BLMR
library(dplyr)
title <- c("The Waste Land","Lord of the Flies","Grapes of Wrath","Pride and Prejudice",
"Frankenstein","Little Women","Jane Eyre","The Things They Carried","Hucklebery                Finn","Siddhartha")
author <- c("Eliot, T.S.","Golding, William","Steinbeck, John","Austen, Jane","Shelley, Mary","Alcott, Louisa May","Bronte, Charlotte","O'Brien, Tim","Twain, Mark","Hesse, Hermann")
pyear <- c(1922,1954,1939,1813,1818,1868,1847,1990,1884,1922)
nstock <- c(10,16,5,7,15,9,12,2,21,4)
price <- c(8,8,10,15,5,20,25,17,12,22)
bookstore <- data.frame(title,author,pyear,nstock,price)
library(dplyr)
books_sorted <- bookstore %>% arrange(desc(pyear),author)
books_sorted
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*50,price))))
sale
sale <- sale %>% mutate(perc_off = (price-sale_price)/price)
sale
salebooks <- sale %>% filter(perc_off != 0.00) %>% select(author,title,sale_price)
salebooks
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock > 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*50,price))))
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock < 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*50,price))))
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock < 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*.50,price))))
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock < 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*.50,price))))
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock < 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*.50,price))))
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear < 1900 & nstock < 10,price*.75,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 & nstock >10,price*.50,price))))
sale
8 * .60
8*.40
8-3.2
sale <- bookstore %>% mutate(sale_price = ifelse(pyear<1900 & nstock >10,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price))))
sale
sellprice = ifelse(pyear<1900 & nstock >10,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price)))
sale <- bookstore %>% mutate(sellprice)
sale
sellprice = ifelse(pyear<1900 & nstock >10,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price)))
sale <- bookstore %>% mutate(sellprice)
sale
sellprice = ifelse((pyear<1900 & nstock >10),price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price)))
sale <- bookstore %>% mutate(sellprice)
sale
sale <- bookstore %>% mutate(sale_price = ifelse(pyear<1900 & nstock >10,price*.50,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price))))
sale <- bookstore %>% mutate(sale_price = ifelse(pyear<1900 & nstock >10,price*.50,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price))))
sale <- bookstore %>% mutate(sale_price = ifelse(pyear<1900 & nstock >10,price*.50,
ifelse(nstock > 10, price*.60,
ifelse(pyear<1900 ,price*.75,price))))
sale
Sys.setenv(Rapid_KEY = 'd24d7bd102msh1c3eeb5b396c7cap1fbcebjsn4dffe31651ee'
)
shiny::runApp('COVID19_DashBoard/CoronaDashBoard')
runApp('~/Documents/Covid19-proj/CoronaDashBoard')
runApp('COVID19_DashBoard/CoronaDashBoard')
